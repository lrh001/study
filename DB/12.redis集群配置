1.redis数据节点开启集群

vim  vim /etc/redis/6379.conf
...
bind 192.168.4.51
port 6351
daemonize yes
cluster-enabled yes
cluster-config-file nodes-6356.conf
cluster-node-timeout 5000

2.部署ruby脚本管理节点

yum -y install ruby rubygems

yum -y install ruby-devel-2.0.0.648-30.el7.x86_64.rpm

gem install redis-3.2.1.gem ##提供命令帮助的redis-trib.rb help

mkdir /root/bin

cp redis-4.0.8/src/redis-trib.rb /root/bin

chmod +x /root/bin/redis-trib.rb

redis-trib.rb create --replicas 1 192.168.4.51:6351 192.168.4.52:6352 192.168.4.53:6353 192.168.4.54:6354 192.168.4.55:6355 192.168.4.56:6356
##创建集群,每个主库有1个从库(--replicas 1),所以这里有3个主库,3个从库

cluster info ##查看集群信息

cluster nodes ##查看节点信息

redis-cli -c -h 192.168.4.51 -p 6351
## -c代表连接集群,ip和端口是集群中的一台机器的ip和端口

redis-trib.rb info 192.168.4.51:6351
##查看数据存储情况

redis-trib.rb check 192.168.4.51:6351
##查看集群信息

主库宕机后,从库自动升级为主库
机器恢复后,自动成为当前主库的从库,并且同步宕机期间的数据

===============================================
创建时会给主库分配hash槽

使用CRC算法对变量名做hash运算,得出的数字对16384取余,最后的结果决定存放在哪台数据库服务器上

===========================================================================

管理集群

向集群里添加主机
	添加mater角色主机
		添加master主机:redis-trib.rb add-node 192.168.4.57:6357 192.168.4.51:6351
		重新分片:redis-trib.rb reshard 192.168.4.51:6351
			指定移除hash槽个数	4096
			指定接收hash槽主机ID 57的主机ID值
			指定移除hash槽主机ID all
			同意这样分片 		yes
	添加slave角色主机
		redis-trib.rb add-node --slave 192.168.4.58:6358  192.168.4.51:6351
		##这里没有指定58作为谁的从库,默认是成为集群中从库最少的主库的从库,如果各个主库的从库数量一致,则随机分配给其中的一个

从集群里移除主机
	移除mater角色主机
		重新分片
		移除主机
	移除slave角色主机
		redis-trib.rb del-node 192.168.4.51:6351 111542468ce3ed1ffc9b2b5dd8b4f63d2c3fab1a

=====================================
分片时,数据也会随之移动

=====================================================================

重新平均分配hash槽
redis-trib.rb rebalance 192.168.4.51:6351


===================================================
重新添加回集群需要清空之前的集群配置信息
方法1:进入数据库执行cluster reset 命令
方法2:停止数据库服务,删除/var/lib/redis/目录下的所有数据

================================================
redis如果先移除主库,对应的从库状态如何?
答:会提升为主

什么情况redis集群会无法工作?
答:当某一主库的数据完全丢失时









